test_name: "delete oss version success"

stages:
  - name: create oss
    request:
      url: "{tavern.env_vars.BASE_URL}/oss"
      method: POST
      headers:
        Authorization: "Bearer {tavern.env_vars.TOKEN}"
      json:
        name: delete-version-oss
    response:
      status_code: 201
      save:
        json:
          oss_id: id

  - name: create version
    request:
      url: "{tavern.env_vars.BASE_URL}/oss/{oss_id}/versions"
      method: POST
      headers:
        Authorization: "Bearer {tavern.env_vars.TOKEN}"
      json:
        version: "3.4.5"
    response:
      status_code: 201
      save:
        json:
          version_id: id

  - name: delete version
    request:
      url: "{tavern.env_vars.BASE_URL}/oss/{oss_id}/versions/{version_id}"
      method: DELETE
      headers:
        Authorization: "Bearer {tavern.env_vars.TOKEN}"
    response:
      status_code: 204

---

test_name: "delete oss version forbidden"

stages:
  - name: create editor user
    request:
      url: "{tavern.env_vars.BASE_URL}/users"
      method: POST
      headers:
        Authorization: "Bearer {tavern.env_vars.TOKEN}"
      json:
        username: version_delete_editor
        roles: [EDITOR]
        password: "$2a$10$Om2EuihRx7HkQQH6kGR92e6JrjZKoggTONqqITt4pmi84LmQg0oDO"
    response:
      status_code: 201

  - name: login as editor
    request:
      url: "{tavern.env_vars.BASE_URL}/auth/login"
      method: POST
      json:
        username: version_delete_editor
        password: viewerpass
    response:
      status_code: 200
      save:
        json:
          editor_token: accessToken

  - name: create oss for forbidden
    request:
      url: "{tavern.env_vars.BASE_URL}/oss"
      method: POST
      headers:
        Authorization: "Bearer {tavern.env_vars.TOKEN}"
      json:
        name: delete-forbidden-oss
    response:
      status_code: 201
      save:
        json:
          oss_id: id

  - name: create version for forbidden
    request:
      url: "{tavern.env_vars.BASE_URL}/oss/{oss_id}/versions"
      method: POST
      headers:
        Authorization: "Bearer {tavern.env_vars.TOKEN}"
      json:
        version: "0.3.0"
    response:
      status_code: 201
      save:
        json:
          version_id: id

  - name: delete with editor token
    request:
      url: "{tavern.env_vars.BASE_URL}/oss/{oss_id}/versions/{version_id}"
      method: DELETE
      headers:
        Authorization: "Bearer {editor_token}"
    response:
      status_code: 403

---

test_name: "delete oss version unauthorized"

stages:
  - name: delete without token
    request:
      url: "{tavern.env_vars.BASE_URL}/oss/00000000-0000-0000-0000-000000000000/versions/00000000-0000-0000-0000-000000000000"
      method: DELETE
    response:
      status_code: 401

---

test_name: "delete oss version not found"
marks: [xfail]

stages:
  - name: delete non-existent version
    request:
      url: "{tavern.env_vars.BASE_URL}/oss/00000000-0000-0000-0000-000000000000/versions/00000000-0000-0000-0000-000000000001"
      method: DELETE
      headers:
        Authorization: "Bearer {tavern.env_vars.TOKEN}"
    response:
      status_code: 404
