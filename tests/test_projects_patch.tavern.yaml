test_name: "update project success"

stages:
  - name: create project for patch
    request:
      url: "{tavern.env_vars.BASE_URL}/projects"
      method: POST
      headers:
        Authorization: "Bearer {tavern.env_vars.TOKEN}"
      json:
        projectCode: patch-prj
        name: patch project
    response:
      status_code: 201
      strict: false
      json:
        id: !anystr
      save:
        json:
          project_id: id

  - name: patch project
    request:
      url: "{tavern.env_vars.BASE_URL}/projects/{project_id}"
      method: PATCH
      headers:
        Authorization: "Bearer {tavern.env_vars.TOKEN}"
      json:
        name: patched project
    response:
      status_code: 200
      strict: false
      json:
        id: "{project_id}"
        projectCode: patch-prj
        name: patched project
        createdAt: !anystr
        updatedAt: !anystr

---

test_name: "update project forbidden"

stages:
  - name: create viewer user
    request:
      url: "{tavern.env_vars.BASE_URL}/users"
      method: POST
      headers:
        Authorization: "Bearer {tavern.env_vars.TOKEN}"
      json:
        username: patch_project_viewer
        roles: [VIEWER]
        password: "$2a$10$Om2EuihRx7HkQQH6kGR92e6JrjZKoggTONqqITt4pmi84LmQg0oDO"
    response:
      status_code: 201
      save:
        json:
          viewer_id: id

  - name: login as viewer
    request:
      url: "{tavern.env_vars.BASE_URL}/auth/login"
      method: POST
      json:
        username: patch_project_viewer
        password: viewerpass
    response:
      status_code: 200
      save:
        json:
          viewer_token: accessToken

  - name: create project for forbidden patch
    request:
      url: "{tavern.env_vars.BASE_URL}/projects"
      method: POST
      headers:
        Authorization: "Bearer {tavern.env_vars.TOKEN}"
      json:
        projectCode: patch-forbidden
        name: forbidden project
    response:
      status_code: 201
      save:
        json:
          forbidden_project_id: id

  - name: patch project with viewer token
    request:
      url: "{tavern.env_vars.BASE_URL}/projects/{forbidden_project_id}"
      method: PATCH
      headers:
        Authorization: "Bearer {viewer_token}"
      json:
        name: no effect
    response:
      status_code: 403

---

test_name: "update project unauthorized"

stages:
  - name: patch without token
    request:
      url: "{tavern.env_vars.BASE_URL}/projects/00000000-0000-0000-0000-000000000000"
      method: PATCH
      json:
        name: x
    response:
      status_code: 401

---

test_name: "update project not found"

stages:
  - name: patch non-existent project
    request:
      url: "{tavern.env_vars.BASE_URL}/projects/00000000-0000-0000-0000-000000000001"
      method: PATCH
      headers:
        Authorization: "Bearer {tavern.env_vars.TOKEN}"
      json:
        name: x
    response:
      status_code: 404
